extends layout

block title
  title Invictus | Household Details

block content
  - 
      // Compute the household name logic based on modalClients
      var householdName = '';
      if (modalClients && modalClients.length > 0) {
        // Head of Household is the first client
        var hoh = modalClients[0];
        var lastName = hoh.lastName || '';
        var firstName = hoh.firstName || '';
        
        if (modalClients.length === 1) {
          // Only one member
          householdName = `${lastName}, ${firstName}`;
        } else if (modalClients.length === 2) {
          // Two members
          var secondClient = modalClients[1];
          var secondLastName = secondClient.lastName || '';
          var secondFirstName = secondClient.firstName || '';
          
          if (lastName.toLowerCase() === secondLastName.toLowerCase()) {
            // Same last name, format: "LastName, FirstName & FirstName"
            householdName = `${lastName}, ${firstName} & ${secondFirstName}`;
          } else {
            // Different last names, just use head of household name
            householdName = `${lastName}, ${firstName}`;
          }
        } else {
          // More than two members, fallback to head of household
          householdName = `${lastName}, ${firstName}`;
        }
      } else {
        // No clients, fallback to something
        householdName = '---';
      }
  input(type="hidden" id="household-id" value=household._id)
  #alert-container


  .household-detail-container
    .topContainer
      .d-flex.align-items-center.mb-3.hhHeader
        a(href='/households', class='me-2 text-decoration-none text-secondary backArrow')
          i.fas.fa-angle-left
        h2.householdDetailHeader #{householdName}

 

    .total-household-value

      // Net Worth (Doughnut) Chart
      .chart-section.mt-4.pie
        .chartTextGroup
          h3.chartHeader Overall Net Worth
          p Total: 
              span#net-worth-value ---
        .chartGroup
          canvas#netWorthChart(width="200" height="200")


      // Monthly Net Worth (Line) Chart
      .chart-section
        h3.chartHeader Over Time
        canvas#monthlyNetWorthChart(width="400" height="200")


          

      // Asset Allocation (Pie) Chart
      .chart-section.mt-4.pie
        h3.chartHeader Asset Allocation Breakdown
        .chartGroup
          canvas#assetAllocationChart(width="200" height="200")


  .bottomContainer
    .allTabContainer
      // New Tabs Section
      .nav-tabs-container
        ul.nav.nav-tabs#householdDetailsTabs
          li.nav-item
            a.nav-link.active(href='#accounts', data-bs-toggle='tab') Accounts
          li.nav-item
            a.nav-link(href='#beneficiaries', data-bs-toggle='tab') Beneficiaries

      .tab-content
        .tab-pane.fade#beneficiaries
          // Existing household info content (if any)

        .tab-pane.fade.show.active#accounts
          .households-controls.d-flex.justify-content-between.mb-3
              .search-bar-container.position-relative
                  input#search-accounts.form-control.me-2(type='text', placeholder='Search accounts')
                  i.search-icon.fas.fa-search
              button.btn.btn-primary.mb-3.mainButton#add-account-button 
                i.fas.fa-plus.me-2
                p Add account
               
          // Selection Container (Hidden by default, appears when accounts selected)
          .selection-container.bg-light.p-3.mb-3.d-flex.justify-content-between.align-items-center(aria-hidden="true")
            .selectionText
              span#selection-count.text-muted
                  |No records selected.
            .selection-actions
              a#clear-selection.text-danger.me-3(href='javascript:void(0)') Clear selection
              button#delete-selected.btn.btn-danger.btn-sm(type='button') Delete
          .table-and-pagination-container
           
            

            table#accounts-table.table.table-striped.table-hover
              thead
                tr.imports-tr-header
                  th.inputTh
                    input#select-all(type='checkbox', aria-label='Select All Accounts')
                  th.owner-cell
                    .thContentContainer
                      p Owner
                      i.sort-icon.material-icons.ml-2(role='button', data-field='accountOwnerName') arrow_upward
                  th.type-cell
                    .thContentContainer
                      p Type
                      i.sort-icon.material-icons.ml-2(role='button', data-field='accountType') arrow_upward
                  th.monthly-dist-cell
                    .thContentContainer
                      p Monthly Distribution
                      i.sort-icon.material-icons.ml-2(role='button', data-field='systematicWithdrawAmount') arrow_upward
                  th.updated-cell
                    .thContentContainer
                      p As Of
                      i.sort-icon.material-icons.ml-2(role='button', data-field='updatedAt') arrow_upward
                  th.total-cell
                    .thContentContainer
                      p Total Balance
                      i.sort-icon.material-icons.ml-2(role='button', data-field='accountValue') arrow_upward


              tbody#accounts-table-body
                // JS will populate account rows with checkboxes and data

            .pagination-container.d-flex.justify-content-between.align-items-center.mt-3
              nav
                ul.pagination.mb-0
                  li.page-item
                    button#prev-page.page-link(type='button') Previous
                  li.page-item
                    button#next-page.page-link(type='button') Next
              span#pagination-info.text-muted

            // Message for no accounts
            p#no-accounts-message(style='display: none;') No accounts available.
          .empty-state-container.hidden.mt-4
            .empty-state-text
                h2 No accounts found
                p.text-muted Get started by adding an account or upload acccount data on the import page.
                .empty-buttons
                    button#empty-add-account-button.btn.btn-primary(type='button', onclick="openAddHouseholdModal()")
                            i.fas.fa-plus.me-2
                            | Add account
            .images-conainer-no-hh 
                img.background-image-empty-state(src='/images/circle-background.png')
                img.empty-state-icon(src='/images/noAccount.png')

    .client-info-container(position='relative')
      a#editHouseholdButton.edit-icon(href='#')
        i.fas.fa-pencil-alt
      //- .household-info-head-text
      //-   p.containerHeaderText Household Info
 
      //- hr.dividingLine.lessMargin

 
      // Household Members Tabs
      .household-members-tabs
        ul.nav.nav-tabs#householdMemberTabs(role='tablist')
          each client, index in modalClients
            - const isActive = index === 0 ? 'active' : ''
            // Display "Last Name, First Name" instead of "First Name Last Name"
            li.nav-item
              a.nav-link(class=isActive, href=`#member-${client._id}`, data-bs-toggle='tab')
                | #{client.lastName}, #{client.firstName}


        .tab-content#householdMemberTabContent
          each client, index in modalClients
            - const isActive = index === 0 ? 'show active' : ''
            .tab-pane.fade(class=isActive, id=`member-${client._id}`)
              .client-info
                .contactInfoSection
                  each field in clientFields
                    - const rawValue = client[field.key]
                    - const formatter = field.formatter ? locals[field.formatter] : null
                    - const fieldValue = formatter ? formatter(rawValue) : (rawValue || '---')
                    .infoGroupText
                      p.infoGroupHeaderText #{field.label}
                      p.contactSub
                          |#{fieldValue}
                      if field.copyable
                          span.copy-icon(data-field=`${fieldValue}`) &nbsp;<i class='fas fa-copy'></i>
  div#viewAccountModal.modal.fade(tabindex='-1', aria-labelledby='viewAccountModalLabel', aria-hidden='true')
    div.modal-dialog.modal-lg
      div.modal-content
        div.modal-header
          h5.modal-title#viewAccountModalLabel Account Details
          button.btn-close(type='button', data-bs-dismiss='modal', aria-label='Close')
        div.modal-body
          div#view-account-content
            // Content will be populated dynamically
        div.modal-footer
          button.btn.btn-secondary(type='button', data-bs-dismiss='modal') Close


  div#deleteConfirmationModal.modal.fade(tabindex='-1', aria-labelledby='deleteConfirmationModalLabel', aria-hidden='true')
      div.modal-dialog
        div.modal-content
          div.modal-header
            h5.modal-title#deleteConfirmationModalLabel Confirm Deletion
            button.btn-close(type='button', data-bs-dismiss='modal', aria-label='Close')
          div.modal-body
            p Are you sure you want to delete the selected accounts? This action cannot be undone and will remove all associated account data.
          div.modal-footer
            button.btn.btn-secondary(type='button', data-bs-dismiss='modal') Cancel
            button.btn.btn-primary(type='button', id='confirm-delete') Delete

  // Include the Add/Edit Household Modal
  div#addHouseholdModal.modal.fade(tabindex='-1', aria-labelledby='addHouseholdModalLabel', aria-hidden='true')
    div.modal-dialog.modal-lg.modal-dialog-scrollable
      div.modal-content
        div.modal-header
          h5.modal-title#addHouseholdModalLabel Edit Household
          button.btn-close(type='button', data-bs-dismiss='modal', aria-label='Close')

        div.modal-body
          form#add-household-form
            h6.mb-3.formModalHeadersOne Head of Household Information

            .mb-3
              label.form-label(for='firstName') First Name *
              input.form-control(type='text', id='firstName', name='firstName', required=true, placeholder='Enter first name')

            .mb-3
              label.form-label(for='lastName') Last Name *
              input.form-control(type='text', id='lastName', name='lastName', required=true, placeholder='Enter last name')

            .mb-3
              label.form-label(for='dob') Date of Birth
              input.form-control(type='date', id='dob', name='dob', placeholder='MM/DD/YYYY')

            .mb-3
              label.form-label(for='ssn') Social Security Number (SSN)
              input.form-control(type='text', id='ssn', name='ssn', placeholder='123-45-6789')

            .mb-3
              label.form-label(for='taxFilingStatus') Tax Filing Status
              select.form-select(id='taxFilingStatus', name='taxFilingStatus')
                option(value='') Select Tax Filing Status
                option(value='Married Filing Jointly') Married Filing Jointly
                option(value='Married Filing Separately') Married Filing Separately
                option(value='Single') Single
                option(value='Head of Household') Head of Household
                option(value='Qualifying Widower') Qualifying Widower

            .mb-3
              label.form-label(for='maritalStatus') Marital Status
              select.form-select(id='maritalStatus', name='maritalStatus')
                option(value='') Select Marital Status
                option(value='Married') Married
                option(value='Single') Single
                option(value='Widowed') Widowed
                option(value='Divorced') Divorced

            .mb-3
              label.form-label(for='mobileNumber') Mobile Number
              input.form-control(type='tel', id='mobileNumber', name='mobileNumber', placeholder='123-456-7890')

            .mb-3
              label.form-label(for='homePhone') Home Phone
              input.form-control(type='tel', id='homePhone', name='homePhone', placeholder='123-456-7890')

            .mb-3
              label.form-label(for='email') Email
              input.form-control(type='email', id='email', name='email', placeholder='example@domain.com')

            .mb-3
              label.form-label(for='homeAddress') Home Address
              input.form-control(type='text', id='homeAddress', name='homeAddress', placeholder='Enter home address')

            h6.mb-3.formModalHeadersTwo Additional Household Members

            // Container for additional household members
            .household-members-section.mt-4
              // Existing member forms will be added here dynamically

            // "Add Household Member" button placed outside the section
            button.btn.btn-secondary#add-household-member(type='button') Add Household Member

        div.modal-footer
          button.btn.btn-secondary(type='button', data-bs-dismiss='modal') Cancel
          button.btn.btn-primary(type='submit', form='add-household-form') Save Changes

  // Add Account Modal
  div#addAccountModal.modal.fade(tabindex='-1', aria-labelledby='addAccountModalLabel', aria-hidden='true')
    div.modal-dialog.modal-lg.modal-dialog-scrollable
      div.modal-content
        div.modal-header
          h5.modal-title#addAccountModalLabel Add Account
          button.btn-close(type='button', data-bs-dismiss='modal', aria-label='Close')
        div.modal-body
          form#add-account-form
            input(type="hidden" id="accountId" name="accountId")
            // Account Owner Dropdown
            .mb-3
              label.form-label(for='accountOwner') Account Owner *
              select.form-select(id='accountOwner', name='accountOwner', required=true)
                option(value='') Select Account Owner
                each client in clients
                  option(value=client._id) #{client.firstName} #{client.lastName}
            // Account Number
            .mb-3
              label.form-label(for='accountNumber') Account Number *
              input.form-control(type='text', id='accountNumber', name='accountNumber', required=true)
            // Account Value
            .mb-3
              label.form-label(for='accountValue') Account Value *
              input.form-control(type='number', step='0.01', id='accountValue', name='accountValue', required=true)
            // Account Type
            .mb-3
              label.form-label(for='accountType') Account Type *
              select.form-select(id='accountType', name='accountType', required=true)
                option(value='') Select Account Type
                each type in accountTypes
                  option(value=type) #{type}
            // Systematic Withdraw Amount
            .mb-3
              label.form-label(for='systematicWithdrawAmount') Systematic Withdraw Amount
              input.form-control(type='number', step='0.01', id='systematicWithdrawAmount', name='systematicWithdrawAmount')
            .mb-3
              label.form-label(for='systematicWithdrawFrequency') Systematic Withdraw Frequency
              select.form-select(id='systematicWithdrawFrequency', name='systematicWithdrawFrequency')
                option(selected) Select Frequency
                option(value='Monthly') Monthly
                option(value='Quarterly') Quarterly
                option(value='Annually') Annually
            // Federal Tax Withholding
            .mb-3
              label.form-label(for='federalTaxWithholding') Federal Tax Withholding (%)
              input.form-control(type='number', step='0.01', id='federalTaxWithholding', name='federalTaxWithholding')
            // State Tax Withholding
            .mb-3
              label.form-label(for='stateTaxWithholding') State Tax Withholding (%)
              input.form-control(type='number', step='0.01', id='stateTaxWithholding', name='stateTaxWithholding')
            // Tax Status
            .mb-3
              label.form-label(for='taxStatus') Tax Status *
              select.form-select(id='taxStatus', name='taxStatus', required=true)
                option(value='') Select Tax Status
                option(value='Taxable') Taxable
                option(value='Tax-Free') Tax-Free
                option(value='Tax-Deferred') Tax-Deferred
            // 12/31 Value
            .mb-3
              label.form-label(for='valueAsOf12_31') 12/31 Value
              input.form-control(type='number', step='0.01', id='valueAsOf12_31', name='valueAsOf12_31')
            // Custodian
            .mb-3
              label.form-label(for='custodian') Custodian *
              select.form-select(id='custodian', name='custodian', required=true)
                option(value='') Select Custodian
                each custodian in custodians
                  option(value=custodian) #{custodian}
            // Beneficiaries
            h6.mb-3 Primary Beneficiaries
            .primary-beneficiaries-section
              // Beneficiary forms will be added here dynamically
            button.btn.btn-secondary#add-primary-beneficiary(type='button') Add Primary Beneficiary

            h6.mb-3 Contingent Beneficiaries
            .contingent-beneficiaries-section
              // Beneficiary forms will be added here dynamically
            button.btn.btn-secondary#add-contingent-beneficiary(type='button') Add Contingent Beneficiary

            // Tax Forms
            .mb-3
              label.form-label(for='taxForms') Tax Forms
              input.form-control(type='text', id='taxForms', name='taxForms', readonly=true)

            // Inherited Account Details
            div#inherited-details-section(style='display: none;')
              h6 Inherited Account Details
              .mb-3
                label.form-label(for='deceasedName') Deceased Name
                input.form-control(type='text', id='deceasedName', name='inheritedAccountDetails.deceasedName')
              .mb-3
                label.form-label(for='dateOfDeath') Date of Death
                input.form-control(type='date', id='dateOfDeath', name='inheritedAccountDetails.dateOfDeath')
              .mb-3
                label.form-label(for='relationshipToDeceased') Relationship to Deceased
                select.form-select(id='relationshipToDeceased', name='inheritedAccountDetails.relationshipToDeceased')
                  option(value='') Select Relationship
                  option(value='Spouse') Spouse
                  option(value='Non-Spouse') Non-Spouse
                  option(value='Minor Child') Minor Child
                  option(value='Disabled Child') Disabled Child
                  option(value='Chronically Ill Individual') Chronically Ill Individual
                  option(value='Other') Other

            // IRA Account Details
            div#ira-details-section(style='display: none;')
              h6 IRA Account Details
              .ira-conversions-section
              button.btn.btn-secondary#add-ira-conversion(type='button') Add Roth Conversion

        div.modal-footer
          button.btn.btn-secondary(type='button', data-bs-dismiss='modal') Cancel
          button.btn.btn-primary(type='submit', form='add-account-form') Save Account

  // Edit Account Modal
  div#editAccountModal.modal.fade(tabindex='-1', aria-labelledby='editAccountModalLabel', aria-hidden='true')
    div.modal-dialog.modal-lg.modal-dialog-scrollable
      div.modal-content
        div.modal-header
          h5.modal-title#editAccountModalLabel Edit Account
          button.btn-close(type='button', data-bs-dismiss='modal', aria-label='Close')
        div.modal-body
          form#edit-account-form
            input(type="hidden" id="editAccountId" name="accountId")
            // Account Owner Dropdown
            .mb-3
              label.form-label(for='editAccountOwner') Account Owner *
              select.form-select(id='editAccountOwner', name='accountOwner', required=true)
                option(value='') Select Account Owner
                each client in clients
                  option(value=client._id) #{client.firstName} #{client.lastName}
            // Account Number
            .mb-3
              label.form-label(for='editAccountNumber') Account Number *
              input.form-control(type='text', id='editAccountNumber', name='accountNumber', required=true)
            // Account Value
            .mb-3
              label.form-label(for='editAccountValue') Account Value *
              input.form-control(type='number', step='0.01', id='editAccountValue', name='accountValue', required=true)
            // Account Type
            .mb-3
              label.form-label(for='editAccountType') Account Type *
              select.form-select(id='editAccountType', name='accountType', required=true)
                option(value='') Select Account Type
                each type in accountTypes
                  option(value=type) #{type}
            // Systematic Withdraw Amount
            .mb-3
              label.form-label(for='editSystematicWithdrawAmount') Systematic Withdraw Amount
              input.form-control(type='number', step='0.01', id='editSystematicWithdrawAmount', name='systematicWithdrawAmount')
            .mb-3
              label.form-label(for='editSystematicWithdrawFrequency') Systematic Withdraw Frequency
              select.form-select(id='editSystematicWithdrawFrequency', name='systematicWithdrawFrequency')
                option(selected) Select Frequency
                option(value='Monthly') Monthly
                option(value='Quarterly') Quarterly
                option(value='Annually') Annually
            // Federal Tax Withholding
            .mb-3
              label.form-label(for='editFederalTaxWithholding') Federal Tax Withholding (%)
              input.form-control(type='number', step='0.01', id='editFederalTaxWithholding', name='federalTaxWithholding')
            // State Tax Withholding
            .mb-3
              label.form-label(for='editStateTaxWithholding') State Tax Withholding (%)
              input.form-control(type='number', step='0.01', id='editStateTaxWithholding', name='stateTaxWithholding')
            // Tax Status
            .mb-3
              label.form-label(for='editTaxStatus') Tax Status *
              select.form-select(id='editTaxStatus', name='taxStatus', required=true)
                option(value='') Select Tax Status
                option(value='Taxable') Taxable
                option(value='Tax-Free') Tax-Free
                option(value='Tax-Deferred') Tax-Deferred
            // 12/31 Value
            .mb-3
              label.form-label(for='editValueAsOf12_31') 12/31 Value
              input.form-control(type='number', step='0.01', id='editValueAsOf12_31', name='valueAsOf12_31')
            // Custodian
            .mb-3
              label.form-label(for='editCustodian') Custodian *
              select.form-select(id='editCustodian', name='custodian', required=true)
                option(value='') Select Custodian
                each custodian in custodians
                  option(value=custodian) #{custodian}
            // Beneficiaries
            h6.mb-3 Primary Beneficiaries
            .primary-beneficiaries-section
              // Beneficiary forms will be added here dynamically
            button.btn.btn-secondary#add-primary-beneficiary(type='button') Add Primary Beneficiary

            h6.mb-3 Contingent Beneficiaries
            .contingent-beneficiaries-section
              // Beneficiary forms will be added here dynamically
            button.btn.btn-secondary#add-contingent-beneficiary(type='button') Add Contingent Beneficiary

            // Tax Forms
            .mb-3
              label.form-label(for='editTaxForms') Tax Forms
              input.form-control(type='text', id='editTaxForms', name='taxForms', readonly=true)

            // Inherited Account Details
            div#inherited-details-section(style='display: none;')
              h6 Inherited Account Details
              .mb-3
                label.form-label(for='editDeceasedName') Deceased Name
                input.form-control(type='text', id='editDeceasedName', name='inheritedAccountDetails.deceasedName')
              .mb-3
                label.form-label(for='editDateOfDeath') Date of Death
                input.form-control(type='date', id='editDateOfDeath', name='inheritedAccountDetails.dateOfDeath')
              .mb-3
                label.form-label(for='editRelationshipToDeceased') Relationship to Deceased
                select.form-select(id='editRelationshipToDeceased', name='inheritedAccountDetails.relationshipToDeceased')
                  option(value='') Select Relationship
                  option(value='Spouse') Spouse
                  option(value='Non-Spouse') Non-Spouse
                  option(value='Minor Child') Minor Child
                  option(value='Disabled Child') Disabled Child
                  option(value='Chronically Ill Individual') Chronically Ill Individual
                  option(value='Other') Other

            // IRA Account Details
            div#ira-details-section(style='display: none;')
              h6 IRA Account Details
              .ira-conversions-section
              button.btn.btn-secondary#add-ira-conversion(type='button') Add Roth Conversion

        div.modal-footer
          button.btn.btn-secondary(type='button', data-bs-dismiss='modal') Cancel
          button.btn.btn-primary(type='submit', form='edit-account-form') Save Account

block scripts
  - var safeClients = clients || [];
  - var clientsJSON = JSON.stringify(safeClients).replace(/</g, '\\u003c');
  script.
    const householdData = !{JSON.stringify(household || {}).replace(/</g, '\\u003c')};
    const clientsData = !{clientsJSON};
    const accountTypes = [
      'Individual',
      'TOD',
      'Joint Tenants',
      'Tenants in Common',
      'IRA',
      'Roth IRA',
      'Inherited IRA',
      'SEP IRA',
      'Simple IRA',
      '401(k)',
      '403(b)',
      '529 Plan',
      'UTMA',
      'Trust',
      'Custodial',
      'Annuity',
      'Variable Annuity',
      'Fixed Annuity',
      'Deferred Annuity',
      'Immediate Annuity',
      'Other',
    ];
    const custodians = [
      'Fidelity',
      'Morgan Stanley',
      'Vanguard',
      'Charles Schwab',
      'TD Ameritrade',
      'Other',
    ];
  script(src='https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js')
  script(src='/js/appScript.js')
  script(src='/socket.io/socket.io.js') 
  script(src='/js/householdDetails.js')
  script(src='/js/householdSummary.js')
  script(src="https://cdn.jsdelivr.net/npm/chart.js")

