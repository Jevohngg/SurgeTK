doctype html
html
  head
    script.
      // Apply collapsed class and inline styles immediately
      (function() {
        if (localStorage.getItem('sidebarCollapsed') === 'true') {
          document.documentElement.classList.add('sidebar-collapsed', 'no-transition');
          
          // Add inline styles for immediate stabilization
          const style = document.createElement('style');
          style.setAttribute('data-sidebar-init', 'true'); // Mark for cleanup
          style.innerHTML = `
            .sidebar { width: 80px; }
            .sidebar-header { padding: 0 8px; }
            .sidebar .company-logo img { width: 24px; opacity: 0; }
            .content .header { margin-left: 80px; }
            .content .main-content { margin-left: 80px; }
          `;
          document.head.appendChild(style);
        }
      })();

    script.
      // Cleanup after load
      window.addEventListener('load', function() {
        // Remove no-transition class and temporary styles
        document.documentElement.classList.remove('no-transition');
        const styleTag = document.querySelector('style[data-sidebar-init]');
        if (styleTag) {
          styleTag.remove(); // Clean up inline styles
        }
      });

    meta(charset='UTF-8')
    meta(name='viewport', content='width=device-width, initial-scale=1.0')

    // Title block for page-specific titles
    block title
      title SurgeTk

    link(rel='icon' type='image/x-icon' href='/images/favicon.svg')

    // External Stylesheets
    link(rel='stylesheet', href='https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css')
    link(rel='stylesheet', href='https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/regular.min.css') 
    link(rel='stylesheet', href='https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/light.min.css')
    link(rel="stylesheet" href="https://unpkg.com/@simonwep/pickr/dist/themes/classic.min.css")

    link(rel='stylesheet', href='https://fonts.googleapis.com/icon?family=Material+Icons')
    link(rel='stylesheet', href='https://fonts.googleapis.com/css2?family=Material+Symbols+Outlined:FILL@0;1')
    link(href="https://fonts.googleapis.com/css2?family=Material+Icons+Outlined" rel="stylesheet")


    // Bootstrap CSS
    link(
      rel='stylesheet',
      href='https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css',
      integrity='sha384-9ndCyUaIbzAi2FUVXJi0CjmCapSmO7SnpJef0486qhLnuZ2cdeRhO02iuK6FUUVM',
      crossorigin='anonymous'
    )
    
    link(rel='stylesheet', href='/css/appStyles.css')
    link(rel='stylesheet' href='/css/responsiveness.css')

    // Additional fonts
    link(rel='stylesheet', href='https://cdn.jsdelivr.net/npm/@fontsource/inter/300.css')
    link(rel='stylesheet', href='https://cdn.jsdelivr.net/npm/@fontsource/inter/400.css')
    link(rel='stylesheet', href='https://cdn.jsdelivr.net/npm/@fontsource/inter/500.css')
    link(rel='stylesheet', href='https://cdn.jsdelivr.net/npm/@fontsource/inter/700.css')

    link(rel='stylesheet', href='https://fonts.googleapis.com/css2?family=Material+Symbols+Outlined')
    link(rel="stylesheet", href="https://cdn.jsdelivr.net/npm/tom-select@2.3.0/dist/css/tom-select.bootstrap5.min.css")


  body
 

    //- Global flash banner (info/success/warning/danger)
    if flash
      div#alert-container
        .alert.flash-alert(role="alert", class=`alert-${flash.type || 'info'}`)
          | #{flash.message}
    #global-loading-overlay
      .spinner-container
        .spinner

    .main-container
      include partials/universalImportModal
      include partials/progressContainer
      include partials/surgeProgressPopup


      .sidebar
        .sidebar-header
          a(href='/dashboard', style='text-decoration: none;')
            span.company-logo
              img(src='/images/surgetk_logo_vertical_blue.svg', alt='Company Logo', class='sidebar-logo')

        // ─────────────────────────────────────────────────
        // Conditional nav items:
        // If user.forceBilling => show only Billing link
        // Otherwise => show the normal nav
        // ─────────────────────────────────────────────────
        ul.sidebar-nav
          if user && user.forceBilling
            // Show only the Billing tab
            li.nav-item
              a(href='/settings/billing')
                .material-symbols-outlined settings
                span Billing
          else
            // Normal navigation items
            li.nav-item
              a(href='/dashboard')
                .material-symbols-outlined dashboard
                span Welcome
            li.nav-item
              a(href='/households')
                .material-symbols-outlined group
                span Households
            li.nav-item
              a(href='/import')
                .material-symbols-outlined upload
                span Imports
            li.nav-item
              a(href='/surge')
                .material-symbols-outlined electric_bolt
                span Surge
            li.nav-item
              a(href='/settings/company-info')
                .material-symbols-outlined settings
                span Firm Settings
            li.nav-item
              a(href='/activity-log')
                .material-symbols-outlined history
                span Activity Log
            if isSuperSuperAdmin
              li.nav-item
                a(href='/super/firms')
                  .material-symbols-outlined business
                  span Firms
                
            if canViewErrors
              li.nav-item
                a(href='/admin/errors')
                  .material-symbols-outlined emergency_home
                  span System Errors
      .sidebar-backdrop(aria-hidden="true")
      // Content container
      .content
        // Header
        .header
          .header-left
            i.material-icons.sidebar-toggle-icon menu

          .header-center
            if companyData && companyData.companyLogo
              a.company-logo-link(href="/settings/company-info")
                img(src=companyData.companyLogo alt="Company Logo" class="uploaded-company-logo")
            else
              a.company-logo-placeholder(href="/settings/company-info")
                span.your-logo-text Your logo here

          .header-right
            //- If we have a userKey in companyData.redtail, it means Redtail is connected
            if (companyData && companyData.redtail && companyData.redtail.userKey)
              .connected-redtail-container
                button.connected-redtail-button.btn.btn-success#openDisconnectModal(type='button') 
                  .redtail-logo-container
                    img(src='/images/redtail-logo.png' alt='Redtail-Logo' class='redtail-logo')
                  p.redtail-button-text Connected
                  //- i.fas.fa-check-circle(style='margin-left: 4px;')

                // Optional "Sync Now" button to trigger a manual sync
                button.btn.btn-secondary#syncRedtailButton
                  i.fas.fa-sync(style='margin-right: 4px;')
                  | Sync

                // Show last sync time if available
                //- if companyData.redtail.lastSync
                //-   span.last-sync-time
                //-     | Last Sync: #{companyData.redtail.lastSync.toLocaleString()} 
                if companyData && companyData.redtail && companyData.redtail.lastSync
                  span.last-sync-time(
                    data-lastsync=companyData.redtail.lastSync
                  )
                    | Last Sync:

            else
              // Original "Connect" state
              .connect-redtail-button(data-bs-toggle='modal', data-bs-target='#connectRedtailModal')
                .redtail-logo-container
                  img(src='/images/redtail-logo.png' alt='Redtail-Logo' class='redtail-logo')
                p.redtail-button-text Connect Redtail


            .notification-icon-container
              i.fas.fa-bell.action-icon(data-bs-toggle='tooltip', data-bs-placement='bottom', title='Notifications')
              span.notification-badge 
              .notification-dropdown
                .dropdown-menu.notifications-menu
                  if notifications && notifications.length > 0
                    each notification in notifications
                      .notification-item(data-id=notification._id)
                        if !notification.isRead
                          .unread-indicator
                        .notification-content
                          .notification-title #{notification.title}
                          .notification-message #{notification.message}
                          .notification-timestamp #{notification.timestamp}
                  else
                    p#no-notifications-message(style="display: flex; justify-content: center; align-items: center; align-content: center; padding: 16px; font-size: 14px; color: grey;") No notifications

            .dropdown
              .user-avatar
                if avatar
                  img(src=avatar, alt='User Avatar')
                else
                  img(src='/images/defaultProfilePhoto.png', alt='Default Avatar')

              .dropdown-menu.dropdown-menu-end.show-avatar
                .dropdownTop
                  .user-avatar
                    if avatar
                      img(src=avatar, alt='User Avatar')
                    else
                      img(src='/images/defaultProfilePhoto.png', alt='Default Avatar')
                  .profileText
                    .dropdown-item-text.companyNameText #{user ? (user.firstName || user.name || 'Unnamed User') : 'Guest'}
                    .dropdown-item-text.companyEmailText #{user ? user.email : 'No Email'}

                hr.dropdown-divider
                a.dropdown-item(href='/settings/account')
                  i.fas.fa-cog(style='margin-right: 8px;') 
                  | Profile Settings
                form(action="/logout", method="POST")
                  button.dropdown-item(type="submit")
                    i.fas.fa-sign-out-alt(style='margin-right: 8px;') 
                    | Log Out
        if !hideStatsBanner
          .stats-banner-container(style=`background-color: ${companyData && companyData.companyBrandingColor ? companyData.companyBrandingColor : '#282e38'};`)
            .dropdown.d-inline-block
              button#advisorFilterBtn.btn.btn-secondary(type='button', aria-expanded='false')
                p Filter Advisors
                .material-symbols-outlined unfold_more
              ul#advisorFilterDropdown.dropdown-menu.dropdown-menu-end
                li
                  // Populated dynamically via JS

            .stats-row.d-flex.justify-content-around.align-items-center
              .stats-group
                .stats-item.stats-secondary
                  span.stats-icon
                    i.fas.fa-users
                  span#total-households-number.text-white 0
                  span.stats-label.text-white Households

                .stats-item.stats-account-value
                  span.stats-icon
                    i.fas.fa-landmark
                  span#total-value-amount.text-white $0

                .stats-item.stats-secondary
                  span.stats-icon
                    i.fas.fa-folder-open
                  span#total-accounts-number.text-white 0
                  span.stats-label.text-white Accounts

        // Main content area
        .main-content
          div#alert-container
          block content

          // Add this AFTER the .main-content or near the bottom:
          // Add this AFTER the .main-content or near the bottom:
          .modal.fade#connectRedtailModal(tabindex='-1', role='dialog', aria-labelledby='connectRedtailTitle', aria-hidden='true')
            .modal-dialog(role='document')
              .modal-content
                .modal-header
                  //- h5.modal-title#connectRedtailTitle Connect Redtail CRM
                  button.btn-close(type='button', data-bs-dismiss='modal', aria-label='Close')
                .modal-body
                  .img-crm-contaier
                    img(src='/images/redtail_crm.svg')
                  .alert.alert-warning#redtail-banner
                    p
                      i.fas.fa-info-circle.me-2(aria-hidden="true")
                      | A Redtail sync does not pull 
                      span(style="font-weight: bold;") all data 
                      | necessary to run every value add. 
                      // ⬇⬇ Turn the “learn more” link into a drawer trigger (not a new tab)
                      a.ms-1.js-redtail-limitations(
                        href="#"
                        role="button"
                        aria-controls="redtailDrawer"
                        style="color: var(--primary-color); text-decoration: underline;"
                      ) See what we can and cannot pull from Redtail
          
                  form#connect-redtail-form
                    // Environment selection: dev/prod
                    .mb-3
                      label.form-label(for='redtailEnvironment') Redtail Environment
                      select.form-select(name='environment' id='redtailEnvironment')
                        option(value='development') Development
                        option(value='production') Production
          
                    // Redtail username
                    .mb-3
                      label.form-label(for='redtailUsername') Redtail Username
                      input.form-control(type='text', id='redtailUsername', name='username', required)
          
                    // Redtail password
                    .mb-3
                      label.form-label(for='redtailPassword') Redtail Password
                      input.form-control(type='password', id='redtailPassword', name='password', required)
          
                .modal-footer
                  button#connect-redtail-submit.btn.btn-primary.loadable-button(type='submit' form='connect-redtail-form')
                    span.button-text Connect
                    span.button-spinner-wrapper
                      span.spinner-border.spinner-border-sm.button-spinner(role='status' aria-hidden='true')
          
          // ===========================
          // Right-side Drawer (Offcanvas)
          // ===========================
          // ===========================
          // Right-side Drawer (Offcanvas)
          // ===========================
          .offcanvas.offcanvas-end#redtailDrawer.rt-drawer(data-bs-scroll='true' data-bs-backdrop='false' tabindex='-1' aria-labelledby='redtailDrawerLabel')
            .offcanvas-header.rt-drawer__header
              h5.offcanvas-title#redtailDrawerLabel.rt-drawer__title Redtail Data Sync
              button.rt-drawer__close(type='button' data-bs-dismiss='offcanvas' aria-label='Close')
                span.material-icons-outlined close

            .offcanvas-body.rt-drawer__body
              p.rt-drawer__intro
                | Syncing with Redtail helps bring in core client, household, advisor, and account information quickly.
                | Below is a summary of what we pull today and what still requires imports.
          
              // Data We Pull
              .rt-section
                .rt-section__head
                  span.material-icons-outlined.rt-section__icon check_circle
                  span.rt-section__title Data We Pull from Redtail
                ul.rt-list
                  li.rt-list__item Clients (names, DOB, marital status, primary email, phones, home address)
                  li.rt-list__item Households (family name, head of household, advisor links)
                  li.rt-list__item Advisors (servicing / writing directories, mapped to lead advisors)
                  li.rt-list__item Accounts (ID, number, balance, type, custodian, tax status)
          
              // Data Not Pulled
              .rt-section.rt-section--warning
                .rt-section__head
                  span.material-icons-outlined.rt-section__icon error
                  span.rt-section__title Data Not Pulled
                ul.rt-list
                  li.rt-list__item Billing data
                  li.rt-list__item Systematic withdrawal amount & frequency (needed for Buckets & Guardrails)
                  li.rt-list__item Physical assets (needed for Net Worth report)
                  li.rt-list__item Liabilities (needed for Net Worth report)
                  li.rt-list__item Insurance
                  li.rt-list__item Beneficiaries
                  li.rt-list__item Client gender
                  li.rt-list__item Contact photos
          
              // Why this matters
              .rt-section.rt-section--neutral
                .rt-section__head
                  span.material-icons-outlined.rt-section__icon info
                  span.rt-section__title Why This Matters
                p.rt-drawer__text
                  | Redtail sync gets you halfway there by eliminating manual entry for contacts and accounts.
                  | You’ll still need to import insurance, liabilities, physical assets, and beneficiaries to unlock all Value Adds.
          
              p.rt-drawer__tip
                | Tip: If you don’t have Client IDs, syncing with Redtail can generate them for you.
                | Match imported accounts by account number to keep everything aligned.
          

          

          
          include partials/_syncStatus


          // "Disconnect from Redtail" Modal
          .modal.fade#disconnectRedtailModal(tabindex='-1' role='dialog')
            .modal-dialog(role='document')
              .modal-content
                .modal-header
                  //- h5.modal-title Redtail Integration
                  button.btn-close(type='button', data-bs-dismiss='modal', aria-label='Close')
                .modal-body
                  .img-crm-contaier
                    img(src='/images/redtail_crm.svg')
                  .disconnect-body-container
                    p Username: #{companyData && companyData.redtail ? companyData.redtail.username : 'N/A'}
                    p Password: ******
                  p.text-danger.disconnect-text
                    | Disconnecting will remove all saved Redtail credentials. You can reconnect later.
                .modal-footer

                  button.mainButton#disconnectRedtailButton.btn.btn-danger(type='button')
                    i.fas.fa-unlink(style='margin-right: 4px;')
                    | Disconnect



          //- views/layout.pug  ── just before the closing </body> (or include as a partial)
          #learnMoreVideoModal.modal.fade(tabindex='-1', aria-hidden='true')
            .modal-dialog.modal-dialog-centered.modal-xl
              .modal-content
                .modal-header.border-0
                  h5.modal-title Learn More
                  button.btn-close(type='button', data-bs-dismiss='modal', aria-label='Close')
                .modal-body.p-0.position-relative.video-modal-body
                  // Loading spinner – hidden once iframe loads
                  .video-spinner.position-absolute.top-50.start-50.translate-middle
                    i.fas.fa-spinner.fa-spin.fa-2x
                  // The Vimeo iframe is injected here
                  iframe#learnMoreIframe.w-100(style='height:70vh;' allow='autoplay; fullscreen; picture-in-picture' allowfullscreen)
          

          .modal.fade#confirmSyncModal(tabindex='-1' role='dialog')
            .modal-dialog(role='document')
              .modal-content
                .modal-header
                  h5.modal-title Confirm Redtail Sync
                  button.btn-close(type='button', data-bs-dismiss='modal', aria-label='Close')
                .modal-body
                  .alert.alert-warning#redtail-banner
                    p
                      i.fas.fa-info-circle.me-2(aria-hidden="true")
                      | A Redtail sync does not pull 
                      span(style="font-weight: bold;") all data 
                      | necessary to run every value add. 
                      // ⬇⬇ Turn the “learn more” link into a drawer trigger (not a new tab)
                      a.ms-1.js-redtail-limitations(
                        href="#"
                        role="button"
                        aria-controls="redtailDrawer"
                        style="color: var(--primary-color); text-decoration: underline;"
                      ) See what we can and cannot pull from Redtail
                  p.bold Are you sure you want to begin the Redtail sync now?
                  p This action can’t be undone. SurgeTk will pull the most up-to-date data from Redtail. 
                  p Don’t worry—any manually added information in SurgeTk won’t be removed or deleted. 
                  p We’ll only add new data that exists in Redtail but not in SurgeTk, and update any previously synced data with Redtail’s latest information.

                .modal-footer
                  button.btn.btn-secondary(type='button', data-bs-dismiss='modal') Cancel
                  button#confirmSyncButton.btn.btn-primary.loadable-button(type='button')
                    span.button-text Sync Now
                    span.button-spinner-wrapper
                      span.spinner-border.spinner-border-sm.button-spinner(role='status' aria-hidden='true')


    //- Show only while ghosting
    if ghost
      div(style="position:sticky;bottom:0;left:0;right:0;z-index:9999999;background:#b00020;color:#fff;padding:8px 16px;text-align:center;font-weight:600;letter-spacing:.2px")
        | GHOST MODE — Logged in to #{ghost.firmName}
        form(action="/super/ghost/exit" method="post" style="display:inline-block;margin-left:16px")
          button(type="submit" style="background:transparent;border:1px solid #fff;color:#fff;padding:2px 8px;border-radius:4px;cursor:pointer") Exit Ghost Mode   

    // Bootstrap JS Bundle 5.3.0
    script(
      src='https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js',
      integrity='sha384-geWF76RCwLtnZ8qwWowPQNguL3RmwHVBC9FhGdlKrxdiJJigb/j/68SIy3Te4Bkz',
      crossorigin='anonymous'
    )
    // Keep your other scripts...
    script(src="https://cdn.jsdelivr.net/npm/tom-select@2.3.0/dist/js/tom-select.complete.min.js")
    
    // ── Intercom (secure mode when available, simple fallback otherwise) ──
    if intercom && intercom.appId
      -
        const __boot = { api_base: "https://api-iam.intercom.io", app_id: intercom.appId };
        if (intercom.jwt) __boot.intercom_user_jwt = intercom.jwt;       // secure mode
        if (intercom.name) __boot.name = intercom.name;                   // optional non-sensitive attrs
        if (intercom.email) __boot.email = intercom.email;
        if (intercom.signedUpAt) __boot.created_at = intercom.signedUpAt;
      script.
        window.__INTERCOM_BOOT__ = !{JSON.stringify(__boot)};
      script.
        document.addEventListener('DOMContentLoaded', function () {
          var drawerEl = document.getElementById('redtailDrawer');
          if (!drawerEl) return;
        
          // Create or get the offcanvas instance once
          var drawer = bootstrap.Offcanvas.getOrCreateInstance(drawerEl, {
            scroll: true,
            backdrop: false
          });
        
          // Bind all triggers (works for both modals)
          var triggers = document.querySelectorAll('.js-redtail-limitations');
          var lastTrigger = null;
        
          triggers.forEach(function (el) {
            el.addEventListener('click', function (e) {
              e.preventDefault();
              e.stopPropagation();
              lastTrigger = e.currentTarget;
              drawer.show();
            });
          });
        
          // Optional: restore focus to the trigger when drawer hides
          drawerEl.addEventListener('hidden.bs.offcanvas', function () {
            if (lastTrigger) {
              try { lastTrigger.focus(); } catch(_) {}
              lastTrigger = null;
            }
          });
        });
      script.
        (function(){var w=window;var ic=w.Intercom;
          if(typeof ic==="function"){ic('reattach_activator');}
          else{var d=document;i=function(){i.c(arguments)};i.q=[];i.c=function(args){i.q.push(args)};w.Intercom=i;
            function l(){var s=d.createElement('script');s.type='text/javascript';s.async=true;
              s.src='https://widget.intercom.io/widget/#{intercom.appId}';
              var x=d.getElementsByTagName('script')[0];x.parentNode.insertBefore(s,x);}
            if(document.readyState==='complete'){l();}
            else if(w.attachEvent){w.attachEvent('onload',l);}
            else{w.addEventListener('load',l,false);}
          }
        })();
        window.Intercom('boot', window.__INTERCOM_BOOT__);
    else
      // Fallback for visitors / logged-out pages (no JWT). Replace with your real App ID.
      - const __APP_ID__ = 'ely2tuq3';
      script.
        (function(){var w=window;var ic=w.Intercom;
          if(typeof ic==="function"){ic('reattach_activator');}
          else{var d=document;i=function(){i.c(arguments)};i.q=[];i.c=function(args){i.q.push(args)};w.Intercom=i;
            function l(){var s=d.createElement('script');s.type='text/javascript';s.async=true;
              s.src='https://widget.intercom.io/widget/ely2tuq3';
              var x=d.getElementsByTagName('script')[0];x.parentNode.insertBefore(s,x);}
            if(document.readyState==='complete'){l();}
            else if(w.attachEvent){w.attachEvent('onload',l);}
            else{w.addEventListener('load',l,false);}
          }
        })();
        window.Intercom('boot', { app_id: 'ely2tuq3' });
    


    // JavaScript block for page-specific scripts
    block scripts
      script(src='/socket.io/socket.io.js') 
      script(src='/js/appScript.js')
      script(src='/js/headerDropdownFilter.js')
      script(src="/js/loading.js")
      script(src="https://unpkg.com/@simonwep/pickr/dist/pickr.min.js")
      script(src='/js/newUniversalImport.js')
      script(src="/js/progressManager.js")
      script(src='/js/valueAddVideo.js')

    // Initialize tooltips
    script.
      document.addEventListener('DOMContentLoaded', function () {
        var tooltipTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle="tooltip"]'))
        var tooltipList = tooltipTriggerList.map(function (tooltipTriggerEl) {
          return new bootstrap.Tooltip(tooltipTriggerEl)
        })
      })
