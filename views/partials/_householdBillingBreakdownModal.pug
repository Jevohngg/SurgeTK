// views/partials/_householdBillingBreakdownModal.pug
// — HOUSEHOLD BILLING BREAKDOWN MODAL —
div#householdBillingBreakdownModal.modal.fade(tabindex='-1' aria-labelledby='hhBillingBreakdownTitle' aria-hidden='true')
  div.modal-dialog.modal-lg.modal-dialog-scrollable
    div.modal-content
      div.modal-header
        h5.modal-title#hhBillingBreakdownTitle Annual Billing Breakdown
        button.btn-close(type='button', data-bs-dismiss='modal', aria-label='Close')

      div.modal-body
        // Precompute all values with plain 'var' to keep Pug happy
        - var ABB   = (typeof annualBillingBreakdown !== 'undefined' && annualBillingBreakdown) ? annualBillingBreakdown : null
        - var isEst = (typeof annualBillingIsEstimated !== 'undefined' && annualBillingIsEstimated) ? true : false

        // Accounts numbers (robust to 0 values)
        - var accActual    = (ABB && ABB.accounts && typeof ABB.accounts.actual === 'number') ? ABB.accounts.actual : 0
        - var accEstimated = (ABB && ABB.accounts && typeof ABB.accounts.estimated === 'number') ? ABB.accounts.estimated : 0
        - var accTotal     = (ABB && ABB.accounts && typeof ABB.accounts.total === 'number') ? ABB.accounts.total : (accActual + accEstimated)
        // UPDATED: read the new name first; fall back to legacy key if present
        - var accMonths    = (ABB && ABB.accounts && typeof ABB.accounts.monthsCovered === 'number') ? ABB.accounts.monthsCovered : ((ABB && ABB.accounts && typeof ABB.accounts.monthsCoveredMin === 'number') ? ABB.accounts.monthsCoveredMin : 0)

        // NEW coverage counts (full / partial / none) + convenience count
        - var accWithData = (ABB && ABB.accounts && typeof ABB.accounts.withAnyData === 'number') ? ABB.accounts.withAnyData : 0
        - var accFull     = (ABB && ABB.accounts && typeof ABB.accounts.fullAccounts === 'number') ? ABB.accounts.fullAccounts : 0
        - var accPartial  = (ABB && ABB.accounts && typeof ABB.accounts.partialAccounts === 'number') ? ABB.accounts.partialAccounts : 0
        - var accNoData   = (ABB && ABB.accounts && typeof ABB.accounts.noDataAccounts === 'number') ? ABB.accounts.noDataAccounts : 0

        // Fees numbers
        - var feeActual  = (ABB && ABB.fees && typeof ABB.fees.actual === 'number') ? ABB.fees.actual : 0
        - var feeMonths  = (ABB && ABB.fees && typeof ABB.fees.monthsCovered === 'number') ? ABB.fees.monthsCovered : 0

        // Period labels (prefer pre-formatted from server)
        - var psLabel = (ABB && ABB.periodStartLabel) ? ABB.periodStartLabel : ((ABB && ABB.periodStart) ? new Date(ABB.periodStart).toLocaleDateString() : '—')
        - var peLabel = (ABB && ABB.periodEndLabel)   ? ABB.periodEndLabel   : ((ABB && ABB.periodEnd)   ? new Date(ABB.periodEnd).toLocaleDateString()   : '—')

        // Final displayed total (use server-provided number if present)
        - var finalTotal = (typeof annualBilling !== 'undefined' && annualBilling !== null) ? annualBilling : Math.round(accTotal + feeActual)

        if ABB
          if isEst
            span.badge.bg-warning.text-dark.me-2(
              data-bs-toggle='tooltip',
              title='One or more accounts are missing months. We projected them to a full year using observed months/quarters. Accounts with no data were excluded. Household fees are never estimated.'
            ) Contains Estimates

          p.text-muted.mb-2
            | Period:&nbsp;
            span= psLabel
            |  – 
            span= peLabel

          .row.g-3.mt-2
            .col-md-6
              h6.mb-1.billing-head AUM Billing
              ul.list-unstyled.mb-0
                li
                  strong Actual:&nbsp;
                  | $
                  span= Number(accActual).toLocaleString()
                  |  (Accounts have as little as:&nbsp;
                  span= accMonths
                  |  of 12 months)
                  .text-muted.small What we actually imported for this year.
                if accEstimated > 0
                  li
                    strong Estimated (projection):&nbsp;
                    | $
                    span= Number(accEstimated).toLocaleString()
                    .text-muted.small We scale partial months/quarters to a full year. Accounts with no billing data are excluded.
                li.mt-1
                  strong Subtotal (AUM Billing):&nbsp;
                  | $
                  span= Number(accTotal).toLocaleString()
                  .text-muted.small Actual + Estimated.
                // NEW: coverage breakdown
                li.mt-1
                  span.text-muted.small
                    | Account coverage:&nbsp;
                    span= accFull
                    |  complete,&nbsp;
                    span= accPartial
                    |  partial,&nbsp;
                    span= accNoData
                    |  no data

            .col-md-6
              h6.mb-1
                h6.billing-head Additional Fees (Household‑level)
                small.text-muted.ms-1 For example—financial planning, commission, etc.
              ul.list-unstyled.mb-0
                li
                  strong Actual:&nbsp;
                  | $
                  span= Number(feeActual).toLocaleString()
                  |  (
                  span= feeMonths
                  |  of 12 months)
                li.mt-1
                  span.text-muted.small Additional fees are not estimated—only actual fee entries are included.

          hr
          p.mb-1
            strong Grand Total:&nbsp;
            | $
            span= Number(finalTotal).toLocaleString()
            .text-muted.small Grand Total = AUM Subtotal + Additional Fees (actual only).

          if isEst
            p.text-muted.small.mb-0
              | Some account(s) have partial data. We projected those accounts to a full year using the average of their observed months/quarters. Accounts with no billing data were excluded. Additional fees are not estimated.
        else
          p.mb-0 No breakdown is available.

      div.modal-footer
        button.btn.btn-secondary(type='button', data-bs-dismiss='modal') Close
